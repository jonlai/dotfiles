# general settings
bind r source-file ~/.tmux.conf \;

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -sg escape-time 0
set -wg mode-keys vi
set -g prefix C-Space
bind C-Space send-prefix
unbind C-b

set -g renumber-windows on
set -g base-index 1
set -wg pane-base-index 1

set -g history-limit 10000
bind -n C-q clear-history

# key-bindings
bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind & kill-window
bind x kill-pane

bind -n C-1 select-window -t :1
bind -n C-2 select-window -t :2
bind -n C-3 select-window -t :3
bind -n C-4 select-window -t :4
bind -n C-5 select-window -t :5
bind -n C-6 select-window -t :6
bind -n C-7 select-window -t :7
bind -n C-8 select-window -t :8
bind -n C-9 select-window -t :9

# status line
set -g status-position top
set -g status-justify left
set -g status-bg colour234
set -g status-fg colour255
set -g status-interval 1

setw -g status-left-length 16
setw -g status-left "[#{=12:session_name}]  "

# tmux pane-resizing
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# pane navigation with vim-split awareness
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind h if-shell "$is_vim" 'send-keys C-space h'  'select-pane -L'
bind j if-shell "$is_vim" 'send-keys C-space j'  'select-pane -D'
bind k if-shell "$is_vim" 'send-keys C-space k'  'select-pane -U'
bind l if-shell "$is_vim" 'send-keys C-space l'  'select-pane -R'
bind x if-shell "$is_vim" 'send-keys C-space x'  'kill-pane'

# checks if the pane's current command is ssh or mosh -> smosh
smosh_cond="#{m|r:^(ssh|mosh-client)$,#{pane_current_command}}"
# derives the mosh or ssh command, with all arguments, from the pane PID
smosh_cmd="#(ps -o args= `pgrep -P #{pane_pid}`)"
# extracts the remote hostname from the smosh command. `[^ ]` is used because
# tmux substitution doesn't support the `\S` token, and only capturing groups
# are used because it also doesn't support non-capturing groups.
smosh_remote="#{?#{E:smosh_cond},#{s|^[^ ]+ (-[^ ]+ )*([^ ]+@)?([^ ]+).*$|\\3|;E:smosh_cmd},}"

# checks if the pane's current command is bash or zsh
pwd_cond="#{m|r:^(ba|z)sh$,#{pane_current_command}}"
# substitutes the $HOME path with `~` in the pane's current path
pwd_tilde="#{s|$HOME|~|:pane_current_path}"
# substitutes the inner path parts with their respective initial character, e.g.
# ~/abc/.def/ghi -> ~/a/.d/ghi. note: in tmux 3.1+ these two substitutions can
# be combined: `#{s|$HOME|~|;s|(\\.?[^/])[^/]*/|\\1/|:pane_current_path}`
pwd="#{?#{E:pwd_cond},#{s|(\\.?[^/])[^/]*/|\\1/|;E:pwd_tilde},}"

# shows the pane's current command if neither situations above apply
fallback="#{?#{||:#{E:smosh_cond},#{E:pwd_cond}},,#{pane_current_command}}"
# shows any active alternate modes on the window
window_mode="#{?window_zoomed_flag,≪Z≫,}#{?pane_in_mode,≪C≫,}"

# combines the above formats. only one of `smosh_remote`, `pwd`, and `fallback`
# shows in the window format at any given time.
window_status_fmt="#I:#{E:smosh_remote}#{E:pwd}#{E:fallback}#{E:window_mode}"
setw -g window-status-format "$window_status_fmt"
setw -g window-status-current-format "$window_status_fmt"
setw -g window-status-style fg=colour255,bg=default
setw -g window-status-current-style fg=colour3,bg=default

setw -g status-right-length 30
setw -g status-right "#[fg=colour2]#H"
